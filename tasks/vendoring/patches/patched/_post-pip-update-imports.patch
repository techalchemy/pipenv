diff --git a/pipenv/patched/notpip/__init__.py b/pipenv/patched/notpip/__init__.py
index 6e580da..5957d31 100644
--- a/pipenv/patched/notpip/__init__.py
+++ b/pipenv/patched/notpip/__init__.py
@@ -17,7 +17,7 @@ import re
 # the stderr output) and is just plain annoying in normal usage.  I don't want
 # to add socks as yet another dependency for pip, nor do I want to allow-stder
 # in the DEP-8 tests, so just suppress the warning.  pdb tells me this has to
-# be done before the import of pip.vcs.
+# be done before the import of notpip.vcs.
 from notpip._vendor.urllib3.exceptions import DependencyWarning
 warnings.filterwarnings("ignore", category=DependencyWarning)  # noqa
 
diff --git a/pipenv/patched/notpip/_vendor/requests/__init__.py b/pipenv/patched/notpip/_vendor/requests/__init__.py
index d679f2f..33667fd 100644
--- a/pipenv/patched/notpip/_vendor/requests/__init__.py
+++ b/pipenv/patched/notpip/_vendor/requests/__init__.py
@@ -40,8 +40,8 @@ is at <http://python-requests.org>.
 :license: Apache 2.0, see LICENSE for more details.
 """
 
-from pip._vendor import urllib3
-from pip._vendor import chardet
+from notpip._vendor import urllib3
+from notpip._vendor import chardet
 import warnings
 from .exceptions import RequestsDependencyWarning
 
@@ -81,13 +81,13 @@ except (AssertionError, ValueError):
 
 # Attempt to enable urllib3's SNI support, if possible
 # try:
-#     from pip._vendor.urllib3.contrib import pyopenssl
+#     from notpip._vendor.urllib3.contrib import pyopenssl
 #     pyopenssl.inject_into_urllib3()
 # except ImportError:
 #     pass
 
 # urllib3's DependencyWarnings should be silenced.
-from pip._vendor.urllib3.exceptions import DependencyWarning
+from notpip._vendor.urllib3.exceptions import DependencyWarning
 warnings.simplefilter('ignore', DependencyWarning)
 
 from .__version__ import __title__, __description__, __url__, __version__
diff --git a/pipenv/patched/notpip/_vendor/requests/adapters.py b/pipenv/patched/notpip/_vendor/requests/adapters.py
index 5787638..4cdbf7e 100644
--- a/pipenv/patched/notpip/_vendor/requests/adapters.py
+++ b/pipenv/patched/notpip/_vendor/requests/adapters.py
@@ -11,20 +11,20 @@ and maintain connections.
 import os.path
 import socket
 
-from pip._vendor.urllib3.poolmanager import PoolManager, proxy_from_url
-from pip._vendor.urllib3.response import HTTPResponse
-from pip._vendor.urllib3.util import Timeout as TimeoutSauce
-from pip._vendor.urllib3.util.retry import Retry
-from pip._vendor.urllib3.exceptions import ClosedPoolError
-from pip._vendor.urllib3.exceptions import ConnectTimeoutError
-from pip._vendor.urllib3.exceptions import HTTPError as _HTTPError
-from pip._vendor.urllib3.exceptions import MaxRetryError
-from pip._vendor.urllib3.exceptions import NewConnectionError
-from pip._vendor.urllib3.exceptions import ProxyError as _ProxyError
-from pip._vendor.urllib3.exceptions import ProtocolError
-from pip._vendor.urllib3.exceptions import ReadTimeoutError
-from pip._vendor.urllib3.exceptions import SSLError as _SSLError
-from pip._vendor.urllib3.exceptions import ResponseError
+from notpip._vendor.urllib3.poolmanager import PoolManager, proxy_from_url
+from notpip._vendor.urllib3.response import HTTPResponse
+from notpip._vendor.urllib3.util import Timeout as TimeoutSauce
+from notpip._vendor.urllib3.util.retry import Retry
+from notpip._vendor.urllib3.exceptions import ClosedPoolError
+from notpip._vendor.urllib3.exceptions import ConnectTimeoutError
+from notpip._vendor.urllib3.exceptions import HTTPError as _HTTPError
+from notpip._vendor.urllib3.exceptions import MaxRetryError
+from notpip._vendor.urllib3.exceptions import NewConnectionError
+from notpip._vendor.urllib3.exceptions import ProxyError as _ProxyError
+from notpip._vendor.urllib3.exceptions import ProtocolError
+from notpip._vendor.urllib3.exceptions import ReadTimeoutError
+from notpip._vendor.urllib3.exceptions import SSLError as _SSLError
+from notpip._vendor.urllib3.exceptions import ResponseError
 
 from .models import Response
 from .compat import urlparse, basestring
@@ -38,7 +38,7 @@ from .exceptions import (ConnectionError, ConnectTimeout, ReadTimeout, SSLError,
 from .auth import _basic_auth_str
 
 try:
-    from pip._vendor.urllib3.contrib.socks import SOCKSProxyManager
+    from notpip._vendor.urllib3.contrib.socks import SOCKSProxyManager
 except ImportError:
     def SOCKSProxyManager(*args, **kwargs):
         raise InvalidSchema("Missing dependencies for SOCKS support.")
diff --git a/pipenv/patched/notpip/_vendor/requests/certs.py b/pipenv/patched/notpip/_vendor/requests/certs.py
index 06a594e..2439625 100644
--- a/pipenv/patched/notpip/_vendor/requests/certs.py
+++ b/pipenv/patched/notpip/_vendor/requests/certs.py
@@ -12,7 +12,7 @@ If you are packaging Requests, e.g., for a Linux distribution or a managed
 environment, you can change the definition of where() to return a separately
 packaged CA bundle.
 """
-from pip._vendor.certifi import where
+from notpip._vendor.certifi import where
 
 if __name__ == '__main__':
     print(where())
diff --git a/pipenv/patched/notpip/_vendor/requests/compat.py b/pipenv/patched/notpip/_vendor/requests/compat.py
index 9c7d6d8..7a9ba56 100644
--- a/pipenv/patched/notpip/_vendor/requests/compat.py
+++ b/pipenv/patched/notpip/_vendor/requests/compat.py
@@ -8,7 +8,7 @@ This module handles import compatibility issues between Python 2 and
 Python 3.
 """
 
-from pip._vendor import chardet
+from notpip._vendor import chardet
 
 import sys
 
@@ -44,7 +44,7 @@ if is_py2:
     from Cookie import Morsel
     from StringIO import StringIO
 
-    from pip._vendor.urllib3.packages.ordered_dict import OrderedDict
+    from notpip._vendor.urllib3.packages.ordered_dict import OrderedDict
 
     builtin_str = str
     bytes = str
diff --git a/pipenv/patched/notpip/_vendor/requests/exceptions.py b/pipenv/patched/notpip/_vendor/requests/exceptions.py
index 3e5d0b2..c116f8e 100644
--- a/pipenv/patched/notpip/_vendor/requests/exceptions.py
+++ b/pipenv/patched/notpip/_vendor/requests/exceptions.py
@@ -6,7 +6,7 @@ requests.exceptions
 
 This module contains the set of Requests' exceptions.
 """
-from pip._vendor.urllib3.exceptions import HTTPError as BaseHTTPError
+from notpip._vendor.urllib3.exceptions import HTTPError as BaseHTTPError
 
 
 class RequestException(IOError):
diff --git a/pipenv/patched/notpip/_vendor/requests/help.py b/pipenv/patched/notpip/_vendor/requests/help.py
index 7c4b193..96f656f 100644
--- a/pipenv/patched/notpip/_vendor/requests/help.py
+++ b/pipenv/patched/notpip/_vendor/requests/help.py
@@ -6,9 +6,9 @@ import platform
 import sys
 import ssl
 
-from pip._vendor import idna
-from pip._vendor import urllib3
-from pip._vendor import chardet
+from notpip._vendor import idna
+from notpip._vendor import urllib3
+from notpip._vendor import chardet
 
 from . import __version__ as requests_version
 
diff --git a/pipenv/patched/notpip/_vendor/requests/models.py b/pipenv/patched/notpip/_vendor/requests/models.py
index 4254fbd..a7efaa0 100644
--- a/pipenv/patched/notpip/_vendor/requests/models.py
+++ b/pipenv/patched/notpip/_vendor/requests/models.py
@@ -16,10 +16,10 @@ import sys
 # such as in Embedded Python. See https://github.com/requests/requests/issues/3578.
 import encodings.idna
 
-from pip._vendor.urllib3.fields import RequestField
-from pip._vendor.urllib3.filepost import encode_multipart_formdata
-from pip._vendor.urllib3.util import parse_url
-from pip._vendor.urllib3.exceptions import (
+from notpip._vendor.urllib3.fields import RequestField
+from notpip._vendor.urllib3.filepost import encode_multipart_formdata
+from notpip._vendor.urllib3.util import parse_url
+from notpip._vendor.urllib3.exceptions import (
     DecodeError, ReadTimeoutError, ProtocolError, LocationParseError)
 
 from io import UnsupportedOperation
